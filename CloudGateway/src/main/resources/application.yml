server:
  port: 9091
spring:
  redis:
    host: redis
    port: 6379
  application:
    name: "API-GATEWAY"
  config:
    import: "configserver:${CONFIG_SERVER_URL:http://localhost:9296}"
   # import: "configserver:http://${CONFIG_SERVER_URL:localhost}:9296"
  cloud:
    gateway:
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
          - name: CircuitBreaker
            args:
              name: ORDER-SERVICE
              fallbackuri: forward:/orderServiceFallBack
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 1
              redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

#okta:
#  oauth2:
#    issuer: https://dev-28451193.okta.com/oauth2/default
#    audience: api://default
#    client-id: 0oajwuev32uB9MuzG5d7
#    client-secret: AOIe_XI5Fi1g58CJ4fffoZ-GvFptTCEYtBp80s43v-UyTvCa5-TUtbLt9sSUu_Ts
#    scopes: openid, email, profile, offline_access

#keycloak:
#  realm: iod
#  auth-server-url: http://localhost:8080/realms/iod/protocol/openid-connect/auth
#  resource: springboot-be
#  credentials:
#    secret: IHM07WJNzvrizccaoshx4pIVa3LzcGUU
#  principal-attribute: Springboot application
#  security-constraints:
#    - security-collections:
#        - name: secured-api
#          pattern: /api/**
#          auth-roles: [USER, ADMIN]

#okta:
#  oauth2:
#    issuer: http://localhost:8080/realms/iod
#    audience: api://default
#    client-id: springboot-be
#    client-secret: IHM07WJNzvrizccaoshx4pIVa3LzcGUU
#    scopes: email, profile, offline_access
